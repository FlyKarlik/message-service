version: '3.5'

services:
  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one:latest
    environment:
      TZ: "Asia/Yekaterinburg"
    expose:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "9411:9411"
    ports: 
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "9411:9411"
    restart: unless-stopped
    networks:
      - messageNetwork

  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"
    networks:
      - messageNetwork

  kafka:
    image: wurstmeister/kafka:2.13-2.7.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - messageNetwork

  kafdrop:
    container_name: kafdrop
    restart: always
    image: obsidiandynamics/kafdrop
    ports:
      - "9001:9000"
    environment:
      - KAFKA_BROKERCONNECT=kafka:9092
    depends_on:
      - zookeeper
      - kafka
    networks:
      - messageNetwork

  
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      TZ: "Asia/Yekaterinburg"
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: test123456
      PGDATA: /data/postgres
    logging:
      driver: none
    volumes:
      - postgres:/data/postgres
      - postgresql:/var/lib/postgresql/data
    expose:
      - 5432
    ports:
      - "5436:5432"
    restart: unless-stopped
    networks:
      - messageNetwork

  message_service:
    container_name: message_service
    image: message_service_image  
    environment:
      DATABASE_URL: "host=postgres port=5432 user=postgres dbname=messages password=test123456 sslmode=disable TimeZone=Asia/Yekaterinburg"
      SERVER_HOST: "0.0.0.0:3000"
      SERVICE_NAME: "MESSAGE_SERVICE"
      KAFKA_BROKERS: kafka:9092
      KAFKA_REQUEST_TOPIC: message_request_topic
      KAFKA_RESPONSE_TOPIC: message_response_topic
      LOG_LEVEL: "debug"
      JAEGER_HOST: "http://jaeger:14268/api/traces"

    restart: unless-stopped
    depends_on:
      - kafdrop
      - kafka
      - jaeger
      - zookeeper
      - postgres

    working_dir: /app
    expose:
      - 3000
    ports:
      - "3000:3000"
    networks:
      - messageNetwork

  processed_service:
    container_name: processed_service
    image: processed_service_image
    restart: unless-stopped
    depends_on:
      - kafdrop
      - kafka
      - jaeger
      - zookeeper
      - postgres
    
    working_dir: /app
    ports:
      - "3001:3000"
    networks:
      - messageNetwork

volumes:
  postgres:
  postgresql:

networks:
  messageNetwork: {}